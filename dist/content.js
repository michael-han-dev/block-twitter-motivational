"use strict";(()=>{var O=(e,t)=>()=>(e&&(t=e(e=0)),t);var z=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);async function w(e,t){try{return(await chrome.storage.sync.get({[e]:t}))[e]}catch(o){return console.error(`Failed to get storage value for key ${e}:`,o),t}}async function L(e,t){try{return(await chrome.storage.local.get({[e]:t}))[e]}catch(o){return console.error(`Failed to get local storage value for key ${e}:`,o),t}}async function B(e,t){try{await chrome.storage.local.set({[e]:t})}catch(o){if(o instanceof Error&&o.message.includes("Extension context invalidated")){console.warn(`Extension context invalidated - skipping storage save for ${e}`);return}console.error(`Failed to set local storage value for key ${e}:`,o)}}var s,S,v=O(()=>{"use strict";s={SLOP_BLOCK_ENABLED:"slopBlockEnabled",DETECTION_COUNT:"detectionCount",BLUR_MODE:"blurMode",GROQ_API_KEY:"groqApiKey",SYSTEM_PROMPT:"systemPrompt",PROCESSED_TWEET_IDS:"processedTweetIds",COLLAPSED_TWEET_IDS:"collapsedTweetIds",BLOCKED_KEYWORDS:"blockedKeywords"},S={[s.SLOP_BLOCK_ENABLED]:!1,[s.DETECTION_COUNT]:0,[s.BLUR_MODE]:!0,[s.GROQ_API_KEY]:"",[s.SYSTEM_PROMPT]:`BE EXTREMELY CONCISE WITH YOUR THOUGHTS, NO NEED TO ELABORATE. You are an expert at detecting AI-generated tweets slop, engagement bait, and generic inspirational content on social media. Analyze each tweet and classify it as slop or genuine content. SLOP INDICATORS: motivational clich\xE9s such as \u201Cmindset is everything,\u201D \u201Cfollow your dreams,\u201D or \u201Chustle harder\u201D; finishes with a call to action or promise of a link/course/email thread; generic advice patterns like \u201Chere\u2019s what I learned,\u201D \u201CX things nobody tells you,\u201D or \u201Cstop doing this, start doing this\u201D; engagement bait phrases such as \u201Cunpopular opinion,\u201D \u201Clet that sink in,\u201D or \u201Cthread \u{1F9F5}\u201D; AI-like structures including numbered or bulleted list of advice, claims, or one-sentence paragraphs, formulaic advice, or excessive emojis; buzzwords like entrepreneur, transformation, breakthrough, optimize, or unlock potential; direct sales pitches such as \u201CDM me,\u201D \u201Clink in bio,\u201D \u201Climited time,\u201D or \u201Cexclusive access.\u201D Additional red flags: any presence of the Unicode em dash (U+2014) instantly marks the tweet as slop with confidence 1.0; dramatic one-line paragraphs split for emphasis; repetitive rhetorical questions; imperative mini-sentences (\u201CGo gym.\u201D, \u201CKeep shipping.\u201D). If two or more indicators appear, classify as slop with high confidence; otherwise judge contextually. 

Important! You must return JSON format: {"results": [{"id": 0, "isSlop": true/false, "confidence": 0.0-1.0}]} where id matches tweet position (0-10).`,[s.PROCESSED_TWEET_IDS]:[],[s.COLLAPSED_TWEET_IDS]:[],[s.BLOCKED_KEYWORDS]:[]}});function I(){return Array.from(document.querySelectorAll('[data-testid="tweet"]')).filter(e=>{let t=e.closest("article");return t&&!t.hasAttribute("data-slop-processed")})}function D(e){let t=e.querySelectorAll('a[href*="/status/"]');for(let o of Array.from(t)){let n=o.href.match(/\/status\/(\d+)/);if(n&&n[1])return n[1]}return null}function G(e){let t=0;for(let o=0;o<e.length;o++)t=(t<<5)-t+e.charCodeAt(o),t|=0;return"h"+Math.abs(t)}async function M(e){var o;let t;try{t=await w(s.BLOCKED_KEYWORDS,S[s.BLOCKED_KEYWORDS]);let r=D(e),n=J(e);if(!n)return null;let l=e.querySelector('[data-testid="User-Name"]'),i=((o=l==null?void 0:l.textContent)==null?void 0:o.trim())||"unknown";return{id:r||G(n),text:n,username:i,element:e,timestamp:Date.now()}}catch(r){return console.error("Error extracting tweet data:",r),null}}function J(e){var c,g;let t="",r=e.querySelector('[data-testid="tweetText"]');if((c=r==null?void 0:r.textContent)!=null&&c.trim())return t=r.textContent.trim(),t;let n=["[lang] span",".css-901oao span",'[dir="auto"] span'];for(let a of n){let p=e.querySelectorAll(a),h=Array.from(p).map(m=>{var E;return(E=m.textContent)==null?void 0:E.trim()}).filter(m=>m&&m.length>0);if(h.length>0&&(t=h.join(" ").trim(),t.length>10))return t}let l=e.querySelectorAll('[lang]:not([lang=""])');for(let a of Array.from(l)){let p=(g=a.textContent)==null?void 0:g.trim();p&&p.length>t.length&&(t=p)}if(t.trim().length>10)return t.trim();let i=e.querySelector('[data-testid="tweet"]')||e,d=V(i).map(a=>{var p;return(p=a.textContent)==null?void 0:p.trim()}).filter(a=>a!==void 0&&a.length>3).filter(a=>!j(a));return d.length>0?(t=d.join(" ").trim(),t):""}function V(e){let t=[],o=document.createTreeWalker(e,NodeFilter.SHOW_TEXT,{acceptNode:n=>{var d;let l=n.parentElement;if(!l)return NodeFilter.FILTER_REJECT;let i=l.tagName.toLowerCase();if(["script","style","svg"].includes(i))return NodeFilter.FILTER_REJECT;let u=(d=n.textContent)==null?void 0:d.trim();return!u||u.length<3?NodeFilter.FILTER_REJECT:NodeFilter.FILTER_ACCEPT}}),r;for(;r=o.nextNode();)t.push(r);return t}function j(e){return[/^\d+[hms]$/,/^Â·$/,/^@/,/^Show this thread$/,/^Replying to/,/^Quote Tweet$/,/^Retweet$/,/^\d+$/,/^Show replies$/,/^More$/].some(o=>o.test(e.trim()))}function N(e,t){let o=document.createElement("div");o.className=t,o.style.cssText=Q;let r=document.createElement("div");return r.style.cssText=`
    display: flex;
    justify-content: space-between;
    align-items: center;
  `,r.innerHTML=e,o.appendChild(r),o.addEventListener("mouseenter",()=>o.style.backgroundColor="#f7f9fa"),o.addEventListener("mouseleave",()=>o.style.backgroundColor="white"),o}function A(e){var i,u,d;if(e.hasAttribute("data-ai-collapsed"))return;e.querySelectorAll(".ai-tweet-bar").forEach(c=>c.remove());let r=((d=(((u=(i=e.querySelector('[data-testid="User-Name"]'))==null?void 0:i.textContent)==null?void 0:u.trim())||"unknown").match(/@\w+/))==null?void 0:d[0])||"unknown",n=document.createElement("div");n.style.cssText="position: relative; width: 100%; display: block;";let l=N(`<span style="color: #657786; font-size: 13px; font-weight: 400;">${r}: ai tweet hidden</span>
     <span style="color: #657786; font-size: 12px;">\u25BC</span>`,"ai-tweet-bar");l.addEventListener("click",c=>{c.stopPropagation(),X(e)}),n.appendChild(l),e.style.cssText="position: relative; display: block;",e.insertBefore(n,e.firstChild),Array.from(e.children).forEach(c=>{c!==n&&(c.style.display="none")}),e.setAttribute("data-ai-collapsed","true")}function X(e){var u,d,c;if(!e.hasAttribute("data-ai-collapsed"))return;let t=D(e);t&&window.slopBlockRemoveFromCollapsed&&window.slopBlockRemoveFromCollapsed(t),e.querySelectorAll(".ai-tweet-bar, .ai-hide-header").forEach(g=>{var a;return(a=g.parentElement)==null?void 0:a.remove()}),Array.from(e.children).forEach(g=>{g.style.display=""});let r=document.createElement("div");r.style.cssText="position: relative; width: 100%; display: block;";let l=((c=(((d=(u=e.querySelector('[data-testid="User-Name"]'))==null?void 0:u.textContent)==null?void 0:d.trim())||"unknown").match(/@\w+/))==null?void 0:c[0])||"unknown",i=N(`<span style="color: #657786; font-size: 13px; font-weight: 400;">${l}: hide again</span>
     <span style="color: #657786; font-size: 12px;">\u25B2</span>`,"ai-hide-header");i.addEventListener("click",g=>{g.stopPropagation(),A(e)}),r.appendChild(i),e.style.display="block",e.insertBefore(r,e.firstChild),e.removeAttribute("data-ai-collapsed")}var Q,P=O(()=>{"use strict";v();Q=`
  background: white;
  border: 1px solid #e1e8ed;
  border-radius: 8px;
  padding: 8px 12px;
  margin: 4px 0;
  cursor: pointer;
  transition: background-color 0.2s ease;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
  display: block;
  width: 100%;
  box-sizing: border-box;
  min-height: 20px;
`});async function R(e){var d,c,g;if(e.length===0)return[];let t,o,r;try{if(t=await L(s.GROQ_API_KEY,S[s.GROQ_API_KEY]),!t)return console.warn("SlopBlock: No API key set \u2013 skipping remote analysis"),null;if(!t.startsWith("gsk_"))return console.error('SlopBlock: Invalid API key format - Groq keys should start with "gsk_"'),null;o=await w(s.SYSTEM_PROMPT,S[s.SYSTEM_PROMPT]),r=await w(s.BLOCKED_KEYWORDS,S[s.BLOCKED_KEYWORDS])}catch{return console.warn("SlopBlock: Extension context invalidated, skipping analysis"),null}let n=r.length>0?`
Additionally, mark a tweet as slop with confidence 1.0 if it contains any of the blocked keywords/phrases \u2014or a recognizable obfuscated form of them\u2014where \u201Crecognizable\u201D means the keyword appears irrespective of case, with or without intervening punctuation, underscores, periods, or whitespace, and with common numeric or symbol substitutions for visually similar letters (for example "@", \u201C0\u201D for \u201Co,\u201D \u201C1\u201D for \u201Cl,\u201D \u201C3\u201D for \u201Ce\u201D). Treat the keyword as present even inside hashtags, @-mentions, or longer handles (e.g. \u201C@trycluely,\u201D \u201Cclu.ely,\u201D \u201Cc1uely,\u201D \u201Cc l u e l y\u201D). Do not flag tweets where the letters form an unrelated English word with a distinct meaning (for example, \u201Cclue\u201D in a detective context does not trigger on \u201Ccluely\u201D): ${r.join(", ")}`:"",l=`Analyze these ${e.length} tweets, identify which are AI-generated motivational slop, engagement bait, or generic inspirational content. ${n}

Tweets:
${e.map((a,p)=>`${p}: ${a}`).join(`

`)}`,u={model:"qwen/qwen3-32b",temperature:.3,max_tokens:4e3,messages:[{role:"system",content:o},{role:"user",content:l}],response_format:{type:"json_object"}};try{let a=await fetch(Z,{method:"POST",headers:{Authorization:`Bearer ${t}`,"Content-Type":"application/json"},body:JSON.stringify(u)});if(!a.ok){let k=await a.text();return console.error("SlopBlock: HTTP error",a.status,k),a.status===401&&console.error("SlopBlock: API key is invalid. Please check your Groq API key in extension settings."),null}let p=await a.text();if(!p.trim())return console.error("SlopBlock: Empty response from API"),null;let h;try{h=JSON.parse(p)}catch(k){return console.error("SlopBlock: Failed to parse response JSON:",k),console.error("SlopBlock: Response was:",p),null}let m=(g=(c=(d=h==null?void 0:h.choices)==null?void 0:d[0])==null?void 0:c.message)==null?void 0:g.content;if(!m)return console.error("SlopBlock: No content in response data:",h),null;let E;try{E=JSON.parse(m)}catch(k){console.error("SlopBlock: Failed to parse AI response JSON:",k),console.error("SlopBlock: AI content was:",m);try{let b=m.match(/\{[\s\S]*\}/);if(b)console.log("SlopBlock: Attempting to extract JSON from text..."),E=JSON.parse(b[0]),console.log("SlopBlock: Successfully extracted JSON from text");else return console.error("SlopBlock: No JSON found in response"),null}catch(b){return console.error("SlopBlock: Failed to extract JSON from text:",b),null}}return!E.results||!Array.isArray(E.results)?(console.error("SlopBlock: Invalid response format - missing results array"),null):(console.log("SlopBlock: Successfully parsed Groq response"),E.results)}catch(a){return console.error("SlopBlock: Network/parse error",a),null}}var Z,H=O(()=>{"use strict";v();Z="https://api.groq.com/openai/v1/chat/completions"});var pe=z(()=>{v();P();H();console.log("SlopBlock: Content script loaded");var F=200,W=10,K=10,y=[],f=[],C=[],Y=new Map,T=!1,x=null;async function ee(){y=await L(s.PROCESSED_TWEET_IDS,[])}async function te(){await B(s.PROCESSED_TWEET_IDS,y)}async function oe(){f=await L(s.COLLAPSED_TWEET_IDS,[]),console.log("SlopBlock: Loaded",f.length,"collapsed tweets")}async function q(){await B(s.COLLAPSED_TWEET_IDS,f)}function re(e){var t;f.includes(e)||(f.push(e),f.length>F&&f.splice(0,W),(t=chrome==null?void 0:chrome.runtime)!=null&&t.id&&q())}function ne(e){var t;y.push(e),y.length>F&&y.splice(0,W),(t=chrome==null?void 0:chrome.runtime)!=null&&t.id&&te()}async function se(e){if(e.length===0)return new Set;let t=e.map(o=>o.text);console.log("SlopBlock: Analyzing",e.length,"tweets");try{let o=await R(t);if(!o)return console.log("SlopBlock: No API results"),new Set;let r=new Set;return o.forEach((n,l)=>{if(n.isSlop&&l<e.length){let i=e[l].id;r.add(i),console.log("SlopBlock: Flagged tweet",i)}}),r}catch(o){return console.error("SlopBlock: Analysis error:",o),new Set}}function ae(e){e.forEach(t=>{let o=Y.get(t);o&&(A(o),re(t),console.log("SlopBlock: Collapsed tweet",t))})}async function $(e=!1){if(!e&&C.length<K)return;let t=C.splice(0,K),o=await se(t);ae(o)}async function _(e){let t;if(console.log("SlopBlock: processTweet called"),!T){console.log("SlopBlock: Extension disabled, skipping");return}if(e.hasAttribute("data-ai-collapsed")){console.log("SlopBlock: Tweet already collapsed, skipping");return}let o=await M(e);if(!o){console.log("SlopBlock: extractTweetData returned null, skipping tweet");return}let{id:r,text:n}=o;if(!r){console.log("SlopBlock: No tweet ID found, skipping");return}if(Y.set(r,e),f.includes(r)){e.hasAttribute("data-ai-collapsed")||(A(e),console.log("SlopBlock: Re-collapsed tweet",r));return}t=await w(s.BLOCKED_KEYWORDS,S[s.BLOCKED_KEYWORDS]),!(y.includes(r)&&t.length===0)&&(console.log("SlopBlock: Processing tweet",r,n.substring(0,50)+"..."),ne(r),C.push({id:r,text:n,element:e}),$())}function le(){if(!T)return;let e=I();console.log("SlopBlock: Initial scan found",e.length,"tweets"),setTimeout(()=>{e.forEach(t=>_(t)),$(!0)},500)}function ie(){x||(console.log("SlopBlock: Starting mutation observer"),x=new MutationObserver(e=>{T&&e.forEach(t=>{t.addedNodes.forEach(o=>{var r;if(o.nodeType===Node.ELEMENT_NODE){let n=o;n.matches('[data-testid="tweet"]')?_(n):(r=n.querySelectorAll)==null||r.call(n,'[data-testid="tweet"]').forEach(l=>_(l))}})})}),x.observe(document.body,{childList:!0,subtree:!0}))}function ce(){x&&(console.log("SlopBlock: Stopping mutation observer"),x.disconnect(),x=null)}function de(e){var o;let t=f.indexOf(e);t!==-1&&(f.splice(t,1),(o=chrome==null?void 0:chrome.runtime)!=null&&o.id&&q())}async function U(){let e=await w(s.SLOP_BLOCK_ENABLED,!1);console.log("SlopBlock: Extension state changed to:",e?"ENABLED":"DISABLED"),e&&!T?(T=!0,window.slopBlockRemoveFromCollapsed=de,ie(),le()):!e&&T&&(T=!1,window.slopBlockRemoveFromCollapsed=void 0,ce(),C.length=0)}chrome.runtime.onMessage.addListener(e=>{e.action==="stateChanged"&&U()});(async()=>(await ee(),await oe(),await U()))()});pe();})();
